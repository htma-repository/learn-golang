// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"learn-golang-dependency-injection/app"
	"learn-golang-dependency-injection/controller"
	"learn-golang-dependency-injection/helper"
	"learn-golang-dependency-injection/middleware"
	"learn-golang-dependency-injection/repository"
	"learn-golang-dependency-injection/service"
	"net/http"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from injector.go:

func InitializeServer() *http.Server {
	productRepositoryImpl := repository.NewProductRepository()
	db := app.DB()
	validate := helper.NewValidate()
	productServiceImpl := service.NewProductService(productRepositoryImpl, db, validate)
	productControllerImpl := controller.NewProductController(productServiceImpl)
	router := app.NewRouter(productControllerImpl)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var productSet = wire.NewSet(repository.NewProductRepository, wire.Bind(new(repository.ProductRepository), new(*repository.ProductRepositoryImpl)), service.NewProductService, wire.Bind(new(service.ProductService), new(*service.ProductServiceImpl)), controller.NewProductController, wire.Bind(new(controller.ProductController), new(*controller.ProductControllerImpl)))
